{"version":3,"sources":["components/AddList.jsx","redux/actions/index.js","components/Card.jsx","components/List.jsx","App.jsx","reportWebVitals.js","redux/reducers/listReducer.jsx","redux/reducers/cardReducer.jsx","redux/reducers/index.js","index.js"],"names":["List","useState","isEdit","setEdit","input","setInput","dispatch","useDispatch","showview","className","onClick","e","editview","onSubmit","preventDefault","type","title","name","value","onChange","target","props","draggableId","id","index","provided","draggableProps","dragHandleProps","innerRef","card","useSelector","state","cardReducer","map","list","listId","droppableId","droppableProps","placeholder","App","listReducer","onDragEnd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","JSON","parse","localStorage","getItem","action","console","log","nanoid","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c730d016.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../css/List.css\";\nimport { useDispatch } from \"react-redux\";\nimport { ADDLIST } from \"../redux/actions\";\nexport default function List() {\n  const [isEdit, setEdit] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  function handleChange(e) {\n    setInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (input !== \"\") {\n      dispatch(ADDLIST(input));\n    }\n  }\n\n  const showview = (\n    <div className=\"list\">\n      <div className=\"action\">\n        <button\n          onClick={(e) => {\n            setEdit(true);\n          }}\n        >\n          + Add a List\n        </button>\n      </div>\n    </div>\n  );\n\n  const editview = (\n    <div className=\"list\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"text\" value={input} onChange={handleChange} />\n        <button>Add List</button>\n        <button\n          onClick={(e) => {\n            setEdit(false);\n          }}\n        >\n          X\n        </button>\n      </form>\n    </div>\n  );\n\n  return <div className=\"list-wrapper\">{isEdit ? editview : showview}</div>;\n}\n","const ADDLIST = (title) => {\n  return {\n    type: \"ADDLIST\",\n    title: title,\n  };\n};\n\n//card\nconst ADDCARD = (listId, title) => {\n  return {\n    type: \"ADDCARD\",\n    title: title,\n    listId: listId,\n  };\n};\n\nconst DeleteTask = (id) => {\n  return {\n    type: \"DeleteTask\",\n    id: id,\n  };\n};\n\nconst ToggleTask = (id) => {\n  return { type: \"ToggleTask\", id: id };\n};\nconst EditTask = (id, name) => {\n  return {\n    type: \"EditTask\",\n    name: name,\n    id: id,\n  };\n};\nexport { ADDLIST, ADDCARD, DeleteTask, ToggleTask, EditTask };\n","import React, { useState } from \"react\";\nimport \"../css/Card.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nexport default function List(props) {\n  return (\n    <Draggable draggableId={props.id} index={props.index}>\n      {(provided) => (\n        <div\n          className=\"card\"\n          id={props.id}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          innerRef={provided.innerRef}\n        >\n          {props.title}\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../css/List.css\";\nimport Card from \"../components/Card\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADDCARD } from \"../redux/actions\";\nimport { Droppable, Drpppable } from \"react-beautiful-dnd\";\nexport default function List(props) {\n  const [isEdit, setEdit] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n\n  function addCard() {\n    if (input !== \"\") {\n      dispatch(ADDCARD(props.id, input));\n    }\n\n    setInput(\"\");\n  }\n  function handleChange(e) {\n    setInput(e.target.value);\n  }\n  const card = useSelector((state) => {\n    return state.cardReducer.map((list, index) => {\n      if (list.listId === props.id) {\n        return <Card title={list.title} key={list.id} index={index} />;\n      }\n    });\n  });\n\n  const showview = (\n    <div className=\"list\" id={props.id}>\n      <div className=\"title\">{props.title}</div>\n      <Droppable droppableId={props.id}>\n        {(provided) => (\n          <div\n            innerRef={provided.innerRef}\n            {...provided.droppableProps}\n            className=\"cardWrapper\"\n          >\n            {card}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      <div className=\"action\">\n        <button\n          onClick={(e) => {\n            setEdit(true);\n          }}\n        >\n          Add a Card\n        </button>\n      </div>\n    </div>\n  );\n\n  const editview = (\n    <div className=\"list\">\n      <div className=\"title\">{props.title}</div>\n      <Droppable droppableId={props.id}>\n        <div className=\"cardWrapper\">{card}</div>\n      </Droppable>\n      <input type=\"text\" value={input} onChange={handleChange} />\n      <button onClick={addCard}>Add Card</button>\n      <button\n        onClick={(e) => {\n          setEdit(false);\n        }}\n      >\n        X\n      </button>\n    </div>\n  );\n\n  return <div className=\"list-wrapper\">{isEdit ? editview : showview}</div>;\n}\n","import \"./css/App.css\";\nimport AddList from \"./components/AddList\";\nimport { useSelector } from \"react-redux\";\nimport List from \"./components/List\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const list = useSelector((state) => {\n    return state.listReducer.map((list) => {\n      return <List id={list.id} title={list.title} key={list.id} />;\n    });\n  });\n  function onDragEnd() {}\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>My Trello</h1>\n        </header>\n        <div className=\"main-board\">\n          {list}\n          <AddList />\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//reducer\nimport { nanoid } from \"nanoid\";\nconst List = [{ id: \"list-0\", title: \"React\" }];\nconst localtasks = JSON.parse(localStorage.getItem(\"List\"));\nconst listReducer = (state = List, action) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"ADDLIST\":\n      console.log(state);\n\n      return [\n        ...state,\n        {\n          id: \"list-\" + nanoid(),\n          title: action.title,\n        },\n      ];\n\n    // case \"ToggleTask\":\n    //   let updatetasks = state.tasks.map((task) => {\n    //     console.log(action.id, task.id);\n    //     if (action.id === task.id) {\n    //       return { ...task, completed: !task.completed };\n    //     }\n    //     return task;\n    //   });\n\n    //   return { tasks: updatetasks };\n\n    // case \"EditTask\":\n    //   let editTasks = state.tasks.map((task) => {\n    //     if (action.id === task.id) {\n    //       return { ...task, name: action.name };\n    //     }\n    //     return task;\n    //   });\n\n    //   return { tasks: editTasks };\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","//reducer\nimport { nanoid } from \"nanoid\";\nconst List = [{ listId: \"list-0\", id: \"card-0\", title: \"Go crazy\" }];\n\nconst cardReducer = (state = List, action) => {\n  switch (action.type) {\n    // case \"DeleteTask\":\n    //   let remaintasks = state.tasks.filter((task) => task.id != action.id);\n\n    //   return { tasks: remaintasks };\n    case \"ADDCARD\":\n      console.log(state);\n\n      return [\n        ...state,\n        {\n          listId: action.listId,\n          id: \"card-\" + nanoid(),\n          title: action.title,\n        },\n      ];\n\n    // case \"ToggleTask\":\n    //   let updatetasks = state.tasks.map((task) => {\n    //     console.log(action.id, task.id);\n    //     if (action.id === task.id) {\n    //       return { ...task, completed: !task.completed };\n    //     }\n    //     return task;\n    //   });\n\n    //   return { tasks: updatetasks };\n\n    // case \"EditTask\":\n    //   let editTasks = state.tasks.map((task) => {\n    //     if (action.id === task.id) {\n    //       return { ...task, name: action.name };\n    //     }\n    //     return task;\n    //   });\n\n    //   return { tasks: editTasks };\n\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import listReducer from \"./listReducer\";\nimport cardReducer from \"./cardReducer\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n  listReducer: listReducer,\n  cardReducer: cardReducer,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(allReducers);\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}